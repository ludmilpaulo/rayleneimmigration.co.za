version: '3.8'

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: raylene_db
      POSTGRES_USER: raylene
      POSTGRES_PASSWORD: raylene_dev_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U raylene"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./apps/backend:/app
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://raylene:raylene_dev_password@db:5432/raylene_db
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: dev-secret-key-change-in-production
      DEBUG: "true"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    command: celery -A raylene worker --loglevel=info
    volumes:
      - ./apps/backend:/app
    environment:
      DATABASE_URL: postgresql://raylene:raylene_dev_password@db:5432/raylene_db
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: dev-secret-key-change-in-production
      DEBUG: "true"
    depends_on:
      - backend
      - db
      - redis

  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    command: npm run dev
    volumes:
      - ./apps/web:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://backend:8000
    depends_on:
      - backend

volumes:
  postgres_data:
  redis_data:

